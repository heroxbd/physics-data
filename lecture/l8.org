#+Title: GNU 命令行
#+Author: 续本达
#+PROPERTY: header-args :eval never-export :exports both

* 课前软件准备
    - GNU 环境 :: 课程与作业环境
      macOS 上需要额外指定使用 GNU 命令
    - gawk :: GNU awk 语言，数据驱动程序语言
      - Alfred Aho, Peter Weinberger, and Brian Kernighan
    - sed :: 文本流编辑器
    - coreutils :: GNU 核心命令
    - man-db :: 帮助文档阅读器
    - info :: 层级帮助文档阅读器
    - curl :: 网络请求和下载器
    - bc :: 计算器
    #+begin_src ein-bash :results output :session https://dpcg.g.airelinux.org/user/xubd/lecture.ipynb :exports both
      apt install gawk sed coreutils man-db info curl bc
    #+end_src
* 拿来主义学习法
  学习技能时，理论支持是辅助的，练习是核心的。在无法理解一个新概念时，最重要的是在练习中体验获得第一手经验。一个还不能透彻理解的工具，如果我会用，就已经掌握了它的重要接口部分。这与基础数学和物理课程的演绎风格很不一样，要求我们在不求甚解时，掌握工具之间关系的全貌，是“归纳”式的学习。

量子力学可能差一点
统计力学也是有几个
热力学基本几个原则
我们在这里推演
但是这门课
大家可以把它当成什么
把它当成普通的基础物理学来上
可能今天讲一个这个话题
明天讲一个那个话题
这几个话题之间看起来
联系不是特别的紧密
那么它们主要的联系
可能是共同都指向了一个目标
比如说共同指向了当代物理学
什么怎么样
然后我们现在这个课上的内容
共同指向一个目标
就是为了我们
实验物理
以及数据处理来服务
这个过程中需要什么样的
计算机方面的准备的
一些技能和工具
我们都会跟大家介绍一下
那么这些工具之间
就没有一个逻辑上的推理的关系
不是说我理解了
第一天
我就可以推导出第二天
那么我理解了
第二周的
就可以推导出
第四第三周了
它是一个
它其实也客观上反映了一些
实验物理学家
现在的工作状态
你想他费了那么多的电
就这么多电
它不一定都用在一个地方
你可能用了很多地方
那么这些工具之间
他们未必有有一定的逻辑关系
但是他们指向的是共同的目标
那么有同学很困惑的一个问题
就是
我如果不求甚解的
就把作业给做了
我心里有一种
愧疚感
我是不是直接
拿着小抄
拿着大家手里边的小抄
我看了一个小抄
把一个关键的部分写出来
我是不是
是不是一有一点愧疚感
或者说有同学说
而我上到了第二周的时候
第一周上的什么某一个地方
我都忘了
这个不看
不看这个资料
都已经想不起来了
会不会有问题跟大家说没有问题
我们现在所学习的内容
其实啊 甚至从一个
从一定的意义上来说是
鼓励大家去不求甚解
去拿来主义
我就说你
尽可能的把别人的肩膀拽过来
然后你站在他的肩膀上
来完成这样的一个任务
那么要不要把一切搞懂
再做这个作业
我记得我们
很早之前
我那个时候
有过一个学生节的节目
那个节目里边就有一句
很经典的台词
就是说你们要去水木书院
然后说不要去水木书院
水木书院太凶残了
还想做完物理实验
再去吃饭
后来它就再也没被人看到了
如果上课的时候
但所以说同学们可以想一下
你在这个实验物理
往往就是这个样子
你在做这个基础物理实验的时候
比如说这些光谱这些
包括
热学实验
包括甚至力学实验
真的能够理解
这个实验中现象的每一个数据
为什么会得到那个数据
其实不仅仅是这里边
有一些随机的过程
它里边还有一些
我们不知道的随机的过程
那么这些部分
可能最后都被
我们归结成系统误差
有的时候我们觉得
我们根本就不理解这个现象
甚至要把系统啥放的很大
所以说在这种情况下
我们其实已经忽略了某一些部分
这个世界已经是
不那么完美了
所以说同学们在做作业的时候
或者在对待我们所学的内容的
时候
可以加入一些拿来主义的
态度
还有一个极端的例子
比如说我现在在用我的计算机
我真的需要理解
每个电子文件都怎样工作
才可以使用的
如果不知道
我就不使用了
所以说就拿来用就好
我比较可以理解
同学们可能会
比如说特别是到了
学物理的同学
他会经常在大一的时候
我们可能会
接受一种
接受这种观点
是我们把数理基础打好了
然后各种事情都可以推演出来
是吧
这是一个非常棒的观点
当然我也深受
深受观点的启发
以至于我现在走到了现在
是吧
那么这个观点
但是容易
有些同学容易让有些同学
走到一个极端里面
我们在大作业的时候
提到了实验物理
到底是本质上是什么
那么我们回到讲清楚
回到柏拉图的世界观的话
我们会
我们可能会有一种倾向
觉得人类的理性是万能的
那么既然它是万能的
它可以推出所有的数学世界
那么这个数学世界
既然我已经都知道了
我可能在里面摘出来一小部分
非常轻松的
摘出一小部分
可能这个数学是就可以推演出
所有的物理世界
然后物理世界摘出一小部分
可能就解释了
我们地球上面发生的事情
那么地球上发生事情了
摘出小部分
可能就能解释
我们这个意识
所发生的这些事情
那么我们就容易进入一种
非常理想主义的状态
觉得其实我们
只要把所有的东西
其实都可以归结为数学的推理
那么这个系统
可能就会一直在振荡
似乎我们就可以解决一切问题了
但是它的问题在于
可能我们穷尽一生
也无法达到
这个目标
那么在眼前的时候
有些东西即使你不知道
它是一个推出来的
你如果会用它
那么你也是很棒啊
希望大家能够
能够理解这一点啊
能够在不同的角度里边进行切换
你既能有一个
非常高的智学的追求和审美
然后又可以
在一些实际的问题中
能够快速的反应
快速的接受
希望大家也能够归纳性的学习
比如说像一个
像一个婴儿
他在学习语言的时候
他在了解这个世界的时候
他可能他了解的这些世界
都是孤立的
比如说随着他长大
他觉得原来这里边
他们是联系起来的
这也是一种归纳性的学习
跟演绎性的学习
推理性的学习
它也不是排斥
希望大家能够
在这两种模式间来回切换
自由地跳跃
这样我们就可以用一个
拿来的工具来寻找
来询问我们所心里面最关心的
寻根究底的问题
所以如果有同学
还比较纠结这个作业
我还没有彻底的理解
我做的话会不会
这个很丢人
或者是
不符合我心中的价值观的话
请你再跟我继续聊天
好吧
好
从这周开始
我们会讲一个python
python之外的
这个世界
它其实是给python
其实是可以认为
是起到一个辅助作用
这是一种看法
另外一种看法其实是说
命令行的世界
本身其实是所有命令的一个驱动
就是所有行为的起点
数据库或者数据分析
还是数据处理
还是在里面做
数值的一些解
它都是所有命令的出发点
所以从另一个角度来讲
命令行的界面可能还更
更加贴近于我们的目标
一些
命令行界面
其实对数据处理是非常重要的
接下来我会跟大家讲
为什么它重要在什么地方
它有什么样的
我们哪些地方可以被替代
哪些地方到目前为止
还很难被替代
大家可以自己判断一下
是否来来部分的重要性
那么我们用到的参考书
一个是JJ的
Data Science at the Command Line
就是说可以在命令行
就进行数据科学
另外一个 
POSIX命令行界面入门基础
是目前为止目前最流行的
 POSIX的环境
Linux 的入门基础
它是我们国家早先的几位
做这种公开课的一位苏老师
还有目前公开课
是放在网易云课堂上
稍微年代稍微久远了一点
但是他讲的这些原则和基本命令
都是很永恒的一些知识
所以说学习起来也很有用
到目前为止
其实我们没有系统地
跟大家介绍命令行
所以说只是在日常
我们看到了一些命令
比如说 ls
我们还有一个命令行的小抄
是吧
 ls 是列出目录
然后cd是
到一个目录里边
rm 是删除文件
git是
每天交作业的时候用
然后less是分页器
用来查看文件的内容
man是manual 用来查看
用来查看在线的文档
cat
用来把两个文件连接在一起
或者是把一个文件
输出到标准输出
pwd是说当前的路径
大家在实际的
前两周的过程中
也都点点滴滴也都接触到了一点
为什么要学习命令行
其实是
它跟我们数据分析
可以起到什么样的作用
比如说它命令行
是可以对可复现的原则的一个
保证
相信同学们
开始接触大作业的时候
都会有一种感想
因为我们大作业
已经不再是像小作业一样
交一个程序
就能把所有东西都算完了
我们可能要多个程序
来回配合
多个程序的配合中
这个程序可能有一个明确的功能
它定义了一个输入的文件
定义了一个输出的问题
然后它要和下面一个程序
连接起来
下一个程序
拿来上一个程序的输入文件
这些定义
我们可以想象
虽然叫大作业
它也是抽象出来的
非常简化的情况
那么在实际的研究过程中
肯定是大作业的10倍
或者100倍上千倍的这种复杂度
那么每一个命令
我们都要记住
要怎样执行
才能进行下一步吗
所以说需要在命令行里面
要有一种机制
把我们在数据分析
所必要的一些命令
把它记录下来
并且可以可复现的
把它们重复出来
把我们的保证科学的结果是
是可以复现的
包括处理的数据
是可以被我们未来的自己
或者是被其他人复现
那么透明原则
也是在命令行里体现的
比如说我们在查看的时候
查看中间结果
我们可能用到 cat
或者是 less的命令
或者h5dump来看
hdf5里边
是有什么样的数据
当然在透明原则上
很多图形的工具也存在
这个可以和命令行互相搭配
大家可以相互取舍
找一个你最喜欢的一种工作模式
包括一次原则
我们主要是在git版本控制里面
体现的
到目前为止
 git的图形工具
其实还不够成熟
所以说在如果我们想用版本控制
的话
一般来说是
在命令行进行是目前我们的
最好的方式
而且 POSIX命令行是目前
管理
数据处理流程
最好的工具已经是
虽然说很多云计算的厂商
有一些图形的方法
来让大家做一些连接
就可以把数据的整个的流程
把它
连接起来
但这些系统还不够成熟
那么对于我们来说
目前为止
命令行还是最好的工具
命令行有一些特点
首先是命令行的易用性
这一点可能大家会觉得比较惊讶
命令行好像看起来
很难用很复古这个
很神秘
它何来的易用性
易用性
其实不知道大家有没有注意到
我们在讲Python的
调试的时候
python里面最重要的调试的
一个特点
它是一个REPL模式
也就是Read–eval–print 
这种loop
这种模式可以快速的
给人类进行反馈
那么反馈之后
我们其实每一步
就可以步步为营的
来调试我们的逻辑啊
就是说我们走
每一步都可以看一下
print到底是不是对
如果是对的
我们再进行下一步的read-eval
那么命令行
比如说我们平时所做的这些
做的这些事情
比如说我们ls
然后cd这里
 ls然后看一下
看一下这些
就是说
看一下 png
文件
然后再回去
我们所打的每一条命令
它都马上给我们有一个反馈
这样的过程呢
其实它就非常的直观
非常易用
这里边的易用
其实相对于编写程序来讲
那么它命令行
其实具有最丰富的文件操作工具
我们在做实验物理
做数据处理的这些数据
一般都是以文件形式来存储的
还有一种情况就是在数据库里面
存储
但很多数据库它也是
抽象成文件
或者是抽象成表格
但是有相当多的一部分数据
都是以文件的形式存在的
那么我们要来分析数据
最多的操作
就是对着文件进行操作
而对这个文件进行操作用命令行
非常天然的
一些文件操作的命令
这些命令
还可以互相组合起来
组合输入任意复杂的使用场景
所以说当我们
跟着对着数据打交道的时候
就意味着我们跟很多文件
跟很多文件打交道
使用命令行像是非常易用的
它的复杂度
其实是介于程序语言跟图形界面
之间
程序语言可能相对来说
更离我们生活远一些
更需要
更需要一些编程的基础
而图形界面可能更加直观一些
那么命令行
基于它的交互性
而是
介于他们俩这样之间
而其实它可以理解为
是计算机系统的母语
也就是说各种计算机的系统
其实各种各样的命令
我们都可以
在相对底层一些
和计算机进行交互
我们可以理解说图形界面
是一部分开发者
为了方便我们更加直观的使用
计算机
他们可能让计算机适应人类的
思维方式的
做出的一些改进
那么如果我们要做一些
更加底层的工作
或者是说更加开发性
更加创新性的工作
那么是需要使用命令行
在这种情况下
它的开发者和使用者
其实重叠性很大
很多时候我们自己给自己
写出了一个工具
然后我们自己
也是自己的用户来回用
而在科学计算中
其实
我们如果站在了科学的前沿的话
那么我们背后的工业界
可能是
是落后于我们
我们可能没有办法
去依赖于工业界
为我们开发出来
趁手的工具
去进行科学研究
那么我们就要走在工业界的前端
就是说做一些简单的开发
那么做开发的时候
在命令行里面开发就更加的简单
因为其实它一会儿我们会看到
其实它的开发
就是我们进行不断的试验之后
总结一下
我们好像一直在重复做一个工作
那么它就变成了一个工具
所以说在命令行的环境里边
完成科学计算
或者数据处理
它其实缩小了
开发者和用户的鸿沟
我们之间开发者
也是我这个用户
也是我
所以大家合作起来
就显得不仅合作起来
还有在创新的过程中
这个包袱可能就更小一点
我记得经常有一些
比如说实验室里边
可能有一个非常古老的
图形界面的程序
你可能是要点一个什么按键
它才能画一个图出来
然后画一个图出来
但是这个程序
可能设计的
不是那么完美
有的时候你经过怎样组合
点下按键
它就出错了
但是因为这个程序
毕竟是图形
它比较复杂
可能它是很多年前
由一个前辈开发出来
你可能没有办法
做太多的改变
这就是因为开发者和用户之间的
距离太远了
而又因为
这是一个科学使用的场景
他可能没有工业界那种
完善的用户界面
所以说一般处置的这些程序
可能会有一些各种各样的问题
它要求我们在使用的过程中
也对它们进行修改
那么在命令行里面
这种情况
相对来说少一些
我们可以
看
它这个东西到底是怎么画的图
或者是怎么操作
操纵的仪器
然后对它进行类似的修改
希望大家已经感受到了
易用性的意思
它的意思不是说
我们像普通的那种直观性
是一种
在科学研究里面
在我们走在工业界前面的时候
需要进行一些开发的时候
它其实是非常易用的
那么命令行还具有
非常强的整合性
还有扩展性
整合性的是说
所有的语言工具
都可以通过命令行交流
比如说我们之前写的python程序
我们在执行的时候
其实就是在
命令行调用这些
python 程序
比如说
readligo上一周的
然后我们执行
它其实就是在
在命令行
再调用python程序
我们可以理解
比如说甚至
我不知道python
我可能是使用Matlab
或者是用这个R
使用各种各样的程序
其实我都可以从命令行调用
就是说最终极的整合的环境
是在命令行
可以把所有的工具都整合起来
它是像一个meta
源编程的这样一个环境
那么新的语言
写成的命令行工具
其实在不断的涌现
随着我们的发展
肯定有
各种各样的使用场景
那就会出现各种各样的工具
这些工具里边
很多其实很适合做数据处理
特别是像
现在数据爆炸的这样一个年代
有很多的
全世界各地有很多
跟数据打交道的人
他们可能随手都会写出来很多
工具
这个工具如果具有一般性的话
我们
都可以拿来使用
从这个角度来看
命令行就是一个天然的胶水
各种各样的语言
都可以协同的
在这样这边工作
而且有些工具
它其实
是符合一个
非常小巧
但是功能非常全
就像一个瑞士军刀
这种
这种工具的集合啊
其实如果可以这样
把小的工具集合起来
完成我们的工作的话
那么就可以避免
避免我们随着一个实验越来越
复杂
我们的程序也越写越长
然后越写越长
就越写越来越难理解
越来越难理解了
可能你的师弟师妹
就是越来越难
接你的班
然后可能你这个程序
就变成一个祖传代码
这个就可以有效的避免这种情况
的出现
如果你把功能定义上很明确
做出了一些小小精悍的工具
然后在不同的层次上
把它们进行复现
他也可以让我们的数据
处理的流程
更容易被理解
那么更容易被理解呢
其实就是增强了科学的
可复现性
可重复性
那么不论流行的语言如何变化
比如说python也是最近
90年代
逐渐出现
在它之前有很多优秀的语言
这些
每年
或者是每10年
肯定都有一些优秀的语言出现
都可以给我们很多的
工具给数据
数据处理
带来很多的便利
但是命令环境的风格
基本上是保持不变的
所以说我们掌握了命令行
其实可以非常适合我们举一反三
今后即使
python被一个其他的语言替代了
我们依旧可以得心应手的
快速的接受
新的事物
然后命令行的一个很大的特点是
它具有自动性
比如说我们想象一下
如果我们一直在重复的做一件
事情
在命令行里面
一直在重复做一件事情
我就可以把我的
命令记录下来
把它放在一个
可执行的脚本里面
就像python命令的脚本一样
这个脚本就是每次执行脚本
它都一下子执行很多命令
这其实可以给我们重复使用
这也是自动
自动执行的一个开始
今后我们可以
自动执行的部分
可以不断地迭代
它可能演化的更复杂了
我们发现
可能适合用python把它重写
或者演化更复杂
可能适合把一些关键部分
用 C或者C++或者fortran
来重写一下
这就可以让我们
一方面
节省很多的时间
因为很多东西可以自动化
另一方面
可以让我们的工具
可以在
在微小的迭代里边
不断的演化
但图形界面可能
不具有这一点
比如说我现在
在这个图形界面里的操作
我这样翻页
这样翻页
这些翻页的
这些动作都非常的直观
但是
我就很难把这些动作都录下来
然后给大家
当成一个工具来使用
所以说
这里边的平衡
希望大家能够体会到
而命令行又是
具有非常大的
普适性
目前现在包括 Microsoft
 Windows
除此之外
还有GNU/Linux
或者是用各种各样的Unix
或者是 MAC os
Mac Os
可能现在写法要求没有空格
所有的我们
99.9%
在地球上能看到的这种
操作系统
它都具有POSIX的命令行
所以说它是具有极大的普适性
基本上所有的计算机
都是在这种命令行
它包括世界顶级的超级计算机
有时候我们的国家的神威
包括美国的新建起来
这些超级计算机
主要都是通过这些命令行来操作的
包括我们自己在云上
构建的主机
包括我们的智能手机
包括智能手机
包括各种各样的物联网设备
比如说一些智能音箱
如果你能够
以一种开发者的模式
使用它的话
一般来说
都是通过命令行来控制
包括我们走廊里面
那些自动贩卖机
它里面也是有一个命令行的环境
这里面在座的某个同学
应该是经常会
进到这些贩卖机里面
然后看一下里边都是什么样的
所以普遍来讲
各种各样的设备
其实都可以用
命令行操作
从 Unix诞生以来
到目前已经有将近50年的历史
然后在这50年的过程中
它的形式基本上没有改变
但是它做的事情
却随着历史50年以来
它一直在变
但是它的基本的交互的形式
一直存在的
这说明它设计是
具有非常强的前瞻性和一般性
所以我相信未来的30年里面
它一定会继续存在
好
前面铺垫了这么多
我们来进入正题
首先命令行
想必大家都已经有一个直观的
理解了
就是说我打一个命令
它执行完了
给我个提示图
我再打一个命令再执行
那么命令行
所以命令行
它的核心
就是各种各样的命令
都有几种
大概可以总结成5种
一种是可执行的程序
这种可执行程序
一般来说是编译生成的
比如说 ls
它是用C语言
编译成一个程序
这个程序就可以被我们调用
调用的时候
就可以列出当前的路径
另外一种是脚本
脚本
就是这种解释型的语言
比如说python还有别的语言
比如说perl语言
可以做成脚本
甚至说
各种各样的脚本其实都有
然后还有shell的内建命令
虽然说
中文经常把它翻译成壳
但是我觉得
所以说我写成壳儿
但是我还是把它叫shell
更加顺口一点
然后说壳感觉总是怪怪的
比如说shell内建命令
就有 cd 
change directory
还有shell里面的函数
这个环境
其实也可以做一个编程环境
它里边可以定义函数
或者是有别名啊
比如说
比如说我打ls是这样的
我如果打ll它是这样
但是ll并不是一个新的命令
ll是
ls -l
加参数表示输出长文本格式的一个
缩写
对
这个就是别名
大家不用记住这5种情况
有个印象就行
那么什么是shell
它是相当于操作系统内核而言
我说一个操作系统
想必大家应该有一门课
叫做计算机科学导论
计科导是吧
我记得以前
基科班培养方案里面也有
然后计算机的内层
就是所谓的内核
然后它的外层就是
所谓的我们外壳这个shell
然后在外层你可以认为说是
人类
所以说这个也可以把人类
纳入到计算机体系里面
那么它其实是shell的作用是
翻译内核的一些这个信息
然后跟人类进行互动
所以说我们这是一个对人类的
接口
其实广义上来讲
这个shell有命令行
但是狭义上来讲
我们就把shell当做命令行
广义上来讲
它
其实包括命令行和图形界面
GUI也是
也是shell的一种
广义上来讲
但是一般来说
我们
默认的讲shell的时候
我们指命令行
那么典型的命运行shell就是bash
为什么说它典型
因为目前来说
在
2019年的时候
它使用的最广泛
我们10年前
10年前
可能它使用的没这么广泛
那么10年后
它也不一定使用这么广泛
目前我们就来以bash为中心来
展开学习
比如说通过 manual bash
可以阅读它的在线文档
man bash
可以看它的文档
我们先下课
我们先继续
还有同学安装遇到点问题
然后我们等着下课的时候
把这个问题解决掉
这种情况
上节课在结束的时候
我们说命令行里面
可以用的命令大概有5种
这种可执行的脚本
还有内建
还有函数以及别名
来上课了
一共有这5种
那么5种里边
我们可以看一下
这些常用的命令
都是什么类型的
可以用
type 这个命令来查看
比如说我们可以看
 ls是什么类型的
我们可以看
我们看type ls 在我这里边
 ls 这个是
ls 是
ls --color=tty
一个alias
就是别名
也就是说我每次打ls的时候
它都是带颜色的
我们看打ls就带颜色
然后如果我们
比如说type -a 它的意思是说
把所有的命令都找到
看它们是什么类型
比如说 type -a ls
我看到首先ls一个color的
别名
其次它是在这个bin里边的一个
一个binary的可执行的程序
我们看
如果我们直接执行可执行程序
它其实就没有颜色了
所以我们要有颜色
一般来说
就要给它加上color才行
而我希望每次都看到颜色
所以说
刚才是如果有别名的定义的话
我直接打ls
其实就
把它加上了颜色
在 shell里面的一种
定义命令的方式 也就是别名
那么其他的比如说cd
其实我们可以一直做 cd的
操作
就是改变当前的路径
就是这些操作
那么这些操作
我们可以看一下
 cd是什么样的命令
它是shell的
builtin
也就是说是
 shell程序里边的内建命令
cd
其实我们也可以看
type本身是什么命令
是吧
我可以打type来看
其他命令 
我看一下type这种命令
然后看到type
其实也是 shell的内建命令
刚才我还打了ll是吧
我看一下这个ll是什么
比如说ll
 ll是 ls
 -lh 的一个别名
我不是说我这写的是
什么
 -al这样
对你的别名是那样
我的别名是这样
是不是这样看一下man ls
什么alf a是all是吧
然后l是
 l 在这
然后看F
大F是吧
那就是classify的意思
ls -alF
 S好
可以进行classify
大F是什么意思
看到了吧
我原来没打大F的时候
它就是这些名字
我打了大F之后
所有的目录后面都会加一个/
表示它是目录
好
所以说在这个时候
我们不知道命令是什么的时候
就直接打一下type
就会知道
至少说这命令是怎么定义的
到底是在哪里定义
以及它定义是什么
接下来是shell里边比较
常用的一个工具
叫做管道
它的它的作用是把前一个程序的
标准输出
和后一个程序的标准输入连接
起来
它其实可以无限的连接
你可以连成很长很长
那么各每个命令
其实可以各司其职
也就是说
我们可以把各种小命令
通过管道把它组合起来
完成
大的功能
比如说在这里
我可以进行一次输出
比如说这些
我会进行一次输出
我不打感叹号了
感叹号有歧义
如果进行这样输出
它就会输出一段话
这一段话是输出到了
标准输出中
标准输出就是显示在屏幕上
那么我可以把标准输出
把它重定向给另一个程序
比如说另一个程序叫wc
 wc大家可能会觉得
它为什么起了这么一个奇怪的
名字
我看一下WC是什么意思
它应该是word count的
缩写
然后我们来数一下
比如说w -c来数一下
这个输出里边
到底有多少个字符
我们数一下28个
我看是不是28个
应该是28个
这样它就可以数出来这个字符
在这种情况下
如果加了感叹号
那么它就是29
我们看一下
比如说加一个
加一个句号
它是29
那加个省略号
它就是31
所以说 wc是用来数它的
个数
还有一个命令
比如说是seq他的意思是sequence
就是说sequence
print a sequence of numbers
一种是只输出一个数
一种是歧视和每个数之间的增量
到停止
比如说seq5 
那就是从1~5
从1~5
增量
增量是在哪呢
增量是在中间
从1~20
然后每个三个数
一个
就是1 4 7 10
13 16 19
这样的命令
其实就可以给我们在命令行
就可以生成很多序列
这些序列有时候会很有作用
比如说对文件进行编号
我们就可以在这里生成一个序列
对它进行编号
那么如果我们想对序列
进行一些过滤
比如说我想只取带7的数
我如果只取带7的数的话
那么
比如说seq30
有30个
我只取里边带7的数
这样
就有7 17 27
如果是再多一点
比如说到100
77 27 37 到 67
然后77也都有
这77 87 97
这个grep
我们一会儿可以看一下它的文档
它的意思是
取出
可以被7匹配的
这种字符串
因为本来seq100从1~100
然后取出7就取出了它
我感觉还是很长
比如说我想数一下
一共有多少个数字
因为取7了之后
它们每一个数字
都是占一个新的行
所以我就可以数一下 wc -l表示
表示lines
取这里边的行数
那么一共有19个
我想是不是有19
应该是有19是吧
因为有一个77
它是一个数
要不然是应该有20
如果我们不数行
比如说数这个数组
不是字符个数的话
它就是56
如果我这样说
如果这样数
我看到19 19 56
默认情况来说
我们可以看
看一下它的文档
它会告诉我们
默认情况输出的是
行数
这个单词数
和字符数
一共是三个量
所以我们在做
做这步操作的时候
这个就是行数
这个
单词数
这个就是字符数
那么刚才我们说
管道涉及到了输入和输出
可以把输入输出这样连起来
那么和它非常联系
非常紧密的概念
就是重定向
我们看到这个标准输入
就相当于连着键盘标准输出
就相当于连着屏幕
这两个
这两个标准的输入和输出
其实非常重要
它可以通过管道把它们都连起来
那么如果我们
希望不是把它
重定向到另一个命令
而是重定向一个文件
就可以用
大于号
表示是标准输出
重定向标准输出
那么在这种情况下呢
是把命令的输出
重定向的文件
比如说我们看一下
 seq100 100的话
它就会输出100个数字
然后我把它们放到
这样一个文件里
s100
然后我们可以看一下
这个文件里面都有什么
比如说查看一下文件的内容
查看一下这个内容
我看这个内容还是很
我可以用less来看这个文件
内容
我们按一下上下的键
可以看到
一共有从1~100
这么多的数字
都输入到
输出到这个文件里
那么重定向的
比如说我还可以
用小于号比较直观
相当于
从s100
然后来把它输入进来
我说如果用wc的话来
数一下 s100文件里面都有哪些
一共有100个行
100个单词和292个
292个字符
这就是标准输入和输出的重定向
这里我们可以用-l来
只进行行数的测量
那么刚才我们简单地转了一圈
转了一圈试了几个命令
看到了管道还有重定向
我们大家会觉得
这些命令
很多 应该是很难一下子把它记住
那么这个时候在线的帮助
其实就显得非常重要了
比如说我忘了
 wc到底是怎么用的
我就可以 man wc
就可以看到它的文档
可以前面有文档的说明
后面有
命令都可以用什么样的参数
最后还有
作者怎样来反馈这个问题
还有它的各种各样其他的信息
还有一些参考文献
那么用man的话
就可以来在线的查看一些文档
那么
对于这个shell命令
其实可以用help
还有help
比如说help
有时候可以用
help cd
这样就可以看到
比如说help cd它太长了
我用这个less
之前我们跟大家讲过
说用less
可以把很长的输出进行翻页
其实我们看
这个就是管道的意思
它help cd输出了很多的文字
然后我们把它
用管道把它作为 less的
输入
这样我们就可以进行翻页
来查看向上向下
我们看
cd 还有参数
比如说 L P
所以这些参数
其实我原来也不知道
第一次发现 cd还有参数
我们可以看在线的帮助文档
就可以了解cd是怎么用
这里边还有
关于cd的解释
那么很多命令
它约定了
自带一个help的参数
当启用 help的时候
它就可以打出一些帮助信息
比如说对于cat
就是忘了cat怎么用
cat --help
就可以看到这个
它的意思是说
concatenate 把文件连接起来
并且输出到标准输出
如果没有文件
文件的话
那就从这个标准输入
读入
然后它有这样的各种各样的参数
那么help
其实还有一种是cat -h
竟然没有
太可怕了
有些文件是有的
比如说ls
这个h 就不是help
那么大家用
两个减号的help
这里边有一个命令行参数的约定
这是GNU系统的约定
这个约定是说
如果我命令参数
只有一个字母的话
只有一个字母的时候
它用一个减号来表示这个参数
如果这个参数是一个单词的话
它用两个减号
来表示这个参数
我们在帮助文档里面
可以看到约定
大家可以不用去
那么不用去深究约定
但是一般来说你可能打错了
发现打一个单词的时候
你可能打一个减号的时候
就容易输错
这时候你打两个减号就可以
比如说help这是一个完整的词
所以它就是两个减号
好
那么接下来
我们其实已经
跟大家过了一下各种命令
大家可以来试验一下
下面的几个命令
你如果试验之后
你如果想深入了解
它是什么意思呢
可以看它的各种各样的帮助文档
有一个是man
来看它的帮助文档
比如说可以是
一种是help
然后还有
这三种形式大家可以
探索一下这4个命令
一个命令叫做
hostname
一个命令叫 uname
一个命令叫 id
我们来一起试验一下
hostname
它输出
就是大家系统的名字
有各种各样编号的名字
不一定是你起的名字
但我这个系统是我起的名字
然后比如说 uname是
返回这个系统
是什么样的系统
uname -a是
把系统的所有信息都输出来
比如说我这个系统是一个
这个Debian
然后它的内核是这样的
它是在这一天
生成出来的
然后后边是系统的结构
这个系统CPU的指令集
下一个是ID
ID
是说我当前用户的
当前用户的特性
比如说我现在用户名是这个
用户的组织
然后一共还有其他的组
可以使用
 Cd
音频视频什么的
大家可以打一下id
可以看你
当前用户都在哪些组里边
也可以别的 id -u
id -g就有各种各样的命令
大家可以通过 man id
来查看它的这些
这些个用法
然后还有date
就是给出当前的时间
现在是 CST中国时间
北京时间
下午3:03
那么date其实它有
也有各种各样的参数
比如说date --help
我们发现help还是很长
还可以定义
我们输出的时间的一些格式
在我们日常的数据
处理的时候
其实还是非常有用的
因为我们说采到一个数据
我们可以用date
直接把它的格式一起
把它的日期一起输出出来
那么还有其他的一些工具
比如说uptime 
大家会继续探索这些命令
比如说uptime是说系统的
到目前为止启动的时间
我机器已经开了一天了
一共有10个用户
在这个机器上
目前的使用情况
然后 dmesg是
显示
应该是可能要sudo 
这个dmesg是显示你现在的
内核的输出信息
然后如果太长的话
你可以用less看一下
然后对于我的这里面会
告诉我那时候开始启动的时候
看到了什么
看到了什么样的硬件
对于Windows下面
WSL可能会
输出的比较简洁
好
我们下课休息
咱们继续上课
我刚才课下有同学问说
alias 怎样定义 
alias就是别名
有的时候
我们要打太多的参数
比如说每次
都打ls --color的话
感觉太麻烦
我每次都ls --color -l
然后我想让它
让我打的快捷一点
然后就可以这样的定义 alias
 alias ls就等于
ls --color
默认的定义
应该就是这样的
如果你打ls
它带颜色的话
应该你的系统里面
有这样的一个别名
比如说我觉得
hostname
感觉好长
要打8个字母
才能执行命令
我希望能够只打两个字母
就执行这个命令
hostname
这样的话打HN的时候
就执行了hostname
这种做法如果你发现
一直都在打一个很长的命令
就可以通过这样来简化
这是简化的第一步
但是还有一个问题
比如说
我这样定义了hostname
之后
我把这个关了
这些都关了
关了之后
我又重新打开了一个
打开了一个窗口
这个时候再打HN就没有了
消失了
我就需要重新定义 
HN=hostname
这样HN就有了
这样重新定义
这也是我一直在跟自己重复
这不是不符合我们的一次的原则
所以说我们看一下
在你的
 home目录下
比如说
在你的home目录下
你的home目录下
会有一个
 .bashrc这样一个文件
 bash就是我们
刚才说的
Bourne Again SHell
这个shell
shell的名字 
rc其实是resources的缩写
也就是说bash里边的资源
比如说我看一下
.bashrc
这里面就有一些
我现在这个环境里面
它默认的一些变量一些定义
对
像我的是这样的定义
你的可能也是别样的定义
比如说我这个定义里边
就有 ls --color

* 第二段
你的可能是别样的定义 
比如说我这个定义里面
就有 ls
color
连grep也默认有
可以有color
那么如果我想把 HN加进去
就可以在这里改
alias hn=hostname
这样一个文件
是每次打开一个shell的时候
它都会自动的执行
所以说每次都执行
文件里边的
这些命令
那么这些命令被执行了之后
如果每次 alias的别名的定义
这样打开一个新的环境
它都有别名存在
大家可以看一下
我的别名系统
它其实还是
而不是别人系统
初始化
相当于resource
但我自己的resource系统还是挺复杂的
给大家来看一下
它里面有各种条件判断
这些判断
然后有很多这些别名
除了这些别名
还有很多变量的定义
除了变量的定义
还有一些
shell里面的函数定义
这都是经年累月
大家现在不用写那么长
这些都是经年累月
有的时候觉得
这个工具很有用
就加到初始化这个文件里面
那个东西很有用
还是可以加进来
加进来之后可能时间长了
它就太长了
变慢了
你可能再重新的整理一下
这是一个
可以自定义自己环境的过程
比如说自定义用别名来
定义你的命令的缩写
好
我们回来
大家有没有把这些命令
都试着做一遍
还有几个命令
比如说find
find是
比如说是在当前目录下
找所有带html结尾的
文件
在各位同学的目录里面
可能没有这个文件
你直接find这个.就可以了
find 点就是说
找出当前目录下的所有文件
比如说find .
文件太多了
找一个文件少一点的路径
我到这个homework里
homework里面也会很多
就是说
到TOLA里边
偷懒里面有这么多
有没有少一点
到data里面就少一点
比如 find .
就可以把所有的
所有的这些文件输出出来
那么我还可以在这里后面加一些
加一些参数
大家注意这个参数
其实不符合我刚才说的命名原则
这个参数虽然是一个单词
但它前面只有一个
一个-
这都是历史的原因
它没有跟标准靠拢
这就是用了习惯了
都记住了
比如说
就是所有的CSV文件
都把它找出来
如果是用png
所有的png文件找出来
比如说所有以c打头的文件
find其实有非常丰富的
其实有非常丰富的
这个格式了
只要看它的文档
就有非常的长
就很长
还有各种各样的格式
如果能掌握它的话
其实可以
非常强大的使用
在这里我们只是给大家
看一下 感兴趣的同学
可以深入的去挖掘命令
那么之前我们还遇到了file命令
file是来简要的输出一下文件的信息
比如说我想看ls是一个
什么文件
刚才我们最开始我们看了
type -a ls
它最开始是一个别名
但是别名之后的 ls
其实是指向了
文件系统里边的一个
编译好的文件
编译好的文件
我们看一下
它是什么样的
它是一个什么什么格式的
一个可执行的程序
这个程序的指令集是
amd64位的
它这个程序的格式是什么样
这有各种各样的信息
比如说我们再看一下
CSV文件
它是说CSV文件
是一个
 Unicode的编码的
纯文本
看看这里边是不是有
是不是有国际语言
然后看一下
对这里面有很多汉语
有很多汉语
所以说它就会告诉我们
它是用户编码的文件
大家不用找
跟我一样的文件
在你的路径里边
肯定有各种各样的文件
我可以看各种各样的东西就是
它是一个图形文件
比如说
unison.log.gpg
它是一个数据文件
接下来大概可以试验这些内容
比如说touch
touch是改变文件的时间
最后修改的时间
那么如果这个文件
不存在
你touch的时候
它就会多出来这个文件
比如说
在我们现在路径里边
我看这个路径里面
一共有这些个文件
这些文件我看这有个s100
比如说我touch s101的话
我在进行当前
文件查看
它就多了一个s101
如果我看它修改时间
比如说s100
是我刚才修改的
是2点54修改的
那么如果对它进行touch
它的修改时间
就变成了3:30
就相当于把这个文件
假装把它改一下
这样的时间
最后修改时间
就变了
还有一个是echo
输出一个信息
不管是什么东西
对
比如说可以这样输出信息
我们看了一遍
这些各种各样的命令
这些命令五花八门
各种各样用途都有
这些命令肯定都是
冰山的一角
各种各样的命令
其实都是 存在的
大家不用每次都把它记住
只要用的时候
能够知道
大概有这样的命令
能够找到
就可以
同学们有什么问题吗
没有问题是吧
没有问题我们做类似的练习
比如说我们
seq
比如说9
然后我们如果把它
输出到就是s9
这样
它就输出到 s9的文件里
大家有没有安装
csvkit
这个是可以在命令行里面
查看CSV文件
然后其中这里面就有一个命令
叫做csvlook
然后csvlook我们看 S9
它就给我们做成了一个表格
1是一个标题
它是认为这是我们一个标题
比如说标题这个叫
这个叫数字
我把seq里面加个标题
或者我们这么加标题
这里边没有head
我就这样 echo
数字
 这样
这样s9里边的第一行
就是数字了
是吧
然后我再让把9个数放进去
注意这个地方
我重定向的时候
用2个大于号
表示说
它不把这个文件
覆盖 在这个文件后边
追上这几个
s9
然后看csvlook
这个汉字不是很好
看起来
它应该没有考虑到汉字的情况
我们这样打
然后重新来
这样把number输进去
然后输出出9个数
两个大于号
然后我们看
其实它是每行一个数字
它相当于一个CSV文件
然后进行csvlook
 它对于英文的字符
还是比较友好
可以看出来
把它拍成了一个表格
你可以看你的大作业里边
可能有csv文件
或者是其他地方找的csv文件
比如说TOLA的这里边
你要没有TOLA也没问题
你再看别的CSV文件
比如说TOLA里面
这个stations
然后就看到
原来 stations是这样
是这样一个CSV的文件
它里面有这个标题
和每一行的数据
都是用逗号隔开的
然后如果对它进行
csvlook
所以它就会把它汇集成一个
一个看起来比较容易理解的
表格了
这是
一套工具
大家在读csv的时候
可以使用
它里面还有其他的
比如cvsjson看起来
可以把csv转成json 
它竟然没有帮助
这样可以看到它的帮助
所以说
对于我也对这个工具不是很熟悉
但是我们可以看到
在命令行里面
我们能够发现工具的各种功能
比如 csvlook
看看一下都有什么样的
参数
还有各种各样这些参数
所以说大家在查看中间
结果是CSV的时候
就可以考虑用命令来查看
好
刚才我们探索了
这些很多个命令
它们每个命令
都有各自的用途
这些各自的用途
大家一次没有记住
也没有关系
你可以拿着一个 cheat sheet
或者是拿着一个教程
然后你想用什么的时候
就找出来用一下
然后如果你未来的一段时间
你还会用到它的话
你就慢慢的把它记住了
这就像背英文单词一样
然后你如果未来一段时间
你没有用到它
你忘了
也没有什么问题
接下来是通配符
通配符是对文件操作很重要的
一个模式
规则匹配的一些通用的字符
这里边shell里面
比较特别的字符
一个是*
一个是?
开始讲过说
命令行是对文件操作非常亲切的
一个环境
而文件
又是数据的基本的载体
所以说我们这些通配符
就体现了这一点
比如说我现在的路径里面
就有很多的文件
还是到我的 home目录里面
这里边有很多的文件
嗯比如说这些文件
大家可以自己来
看
你的home目录里面都有哪些文件
比如说这些文件里
有M打头的M开头的
我只要看
比如说echo m*
那么这个*
它代表的是任意一个字
包括0的字符
任意字符
匹配的是当前的文件夹里的文件
比如说这里边有这么多文件
我如果打m*的话
那么这两个文件夹
movie和music就被匹配了
比如说我想匹配所有的
以log结尾的文件
我们就看到了是这样的
log文件
这是*
?呢
它可以替代一个字符
不管这一个字符是什么
比如说m 4个字符我都不知道
比如说m 我不知道这4个字符
都是什么
我看一下
 m 4个字符
它可能匹配成movie music
我也可以用路径来进行这些匹配
比如说
在这个路径里面 usr doc
比如说我想看所有的
以core打头的
开头的这些路径
就是说
它就能够输出出来
匹配出来core打头的一个路径
我们可以看一下
这个路径是什么
然后我们如果想
看
比如说看路径
下面的所有
gz结尾的文件
这个是一个压缩的文件
那么它就可以
输出所有这些文件的路径
我也可以用 ls
来列出这些所有的文件
那么这些是我们在探索一个
目录结构的时候
常用的一些操作
比如说我想探索一下
所有
所有以一个字母加z
结尾的文件
这样
比如说我这些share
假如说忘了
我就这样把它换成问号
这都可以匹配出来
这都可以匹配出来
所以说通配符就是可以
以一定规则
把某些文件给它找出来
那么比如说在我的路径里边
如果有很多之前的讲义的话
那么就有都是以Python开头的
有一个短线
短线后面是接着一个命令
那么你对它进行匹配的话
就可以把以前的这些东西
都匹配出来
那么比如说ipynb
是
那一共有这些文件的话
那么如果我们
来进行这样的匹配
这是一个文件名后边
我也不知道是什么
这么
这样加进去
也就把所有文件匹配出来
好
关于匹配大家有什么问题吗
匹配起来
其实它的功能不是特别强大
是吧
我们只能做简单的替换
有的时候
我们想做一些更加高等的操作
比如说
我想做一些
这些匹配的做不出来的
一些操作啊
这个时候
用到一个
非常强大的工具
这也是我们课程中
第一次遇到
所谓的这种形式语言的例子
那么接下来我们会跟大家讲一下
字符串的匹配和正则表达式
之前我们在python里面
其实已经做了一点初步的字符串
匹配
比如说
那些以什么开头的字符串
或者以什么结尾的字符串
或者是包含什么字符串
今天我们也用了一点
比如说刚才我们所做的
grep
从1~100个数取其中带7的
那么它就把
所有带7的这种数字
把它匹配下来
那么如果我要做更加复杂的匹配
比如说我们要处理文本
或者是处理一些其他的数据的
输出
那么正则表达式
就是一个非常强大的工具
它为什么强大呢
首先正则表达式是一种形式语言
形式语言的意思
是说这个语言可以精确的用数学
和可以处理的公式
定义出来
比如说python严格来讲
它也是可以用数学
把它的语法描述出来
然后可以用机器把它处理
那么它也算是一种
很复杂的形式语言
而正则表达式算是相对来讲
很简单的一种
形式语言
或者说我们可以把它
说成是公理语言
比如说我们自然语言
平时说的汉语
就没办法公理化
但是这种语言
我们如果把它可以公理化
它就有一个非常好的好处
公理化了之后
就可以用机器来自动的处理
而且公理化之后
它的使用角度的好处就更好
既然它可以公理化
它可以通过工业标准
来严格的把它定义下来
那么用户和语言的引擎的开发者
就可以完全分工协作
比如说我作为用户
我只知道
说这套语言就可以
然后开发者
它可以开发出来
非常强大的语言的
这种语言的实现
那么就我就可以使用
非常高性能的一种事项
比如说语言的基本的要素
这个点
是代表任意的字符
比如说刚才的例子
 seq
我现在是找里边的7
找7的时候
这里边第二位是7的 有第一位是7的
我希望只找第二位是7的情况
那么我就用打一个
.7
我应该不加引号
也是可以的
所以这样点
就代表一个任意的字符
比如说我想找第一位是3的
从30~39
但是点表示是一个字符
比如说我1000的话
1000可能有点害怕
1000有点爆炸
试一下
所有带3的
都被它这样匹配下来了
比如说1000
我如果看1000的话
那就所有的
带3的都被它找出来
但是第一位是3的这种
最后一位是3的
应该就没有被找出来
但是我希望开头是3
你看一下
刚才的这些要素
就是说开始的部分
是
表示开始
^表示开始
$符号表示结束
然后*表示任意次的重复
大家手里边的之前发的那个
小抄里面
有它的各种要素
大家可以参考的看一下
目前来说
这些定义还都比较抽象
因为它们是从
把数学公理
把它定义出来
但是目前为止
我们先在shell
加号
然后问号
编号
还有编号
每个编号还有点
进行一些练习
它们都可以通过公理体系
定义出来
定义出来之后
比如说我们想做一件事情
想找出开头是3
开头是3的这种
这种数
我看就把它过滤了
就只剩下开头是3
接下来有一个数字
如果我让它说开头是3
然后中间是某一个数字
结尾
然后就到了结尾
不让它
有两位数字
或者多几位数字
不让它有两个数字
或多几个数字
这样就可以把它
过滤
我们是从满足这个条件的数字
就开头是3
之后有一个时间的数字
那么如果是*的意思
就是说
星号的意思
这个表示是开头
这个表示是结尾
这表示任意
然后*
*的是0
到无穷
然后都可以
比如说我在这里打个星号
意思是说
在3的后面跟了一个
跟着某一个字符
这个字符可以任意的字符
可以重复
任意多遍
也就是相当于
它可以匹配3. 3.. 3...
都可以
所以我这样打出来
所有3开头的
比如说
3开头的
它重复0次是3 重复一次
是两位数的30大头
重复两次
那就是三位数300开头
是吧
那么如果是加号呢
加号是
至少重复一次
来重复多次
也都没问题
加上20
至少重复一次
把它变成加号
发生了什么
遇到了一个坑
加号
不再grep里面
要用加号的时候
我们需要用egrep才行
加号的时候
需要使用egrep
加号的时候表示
它重复一遍
到无穷遍都可以
但是这个语法
我们可以看到
这是一个公理体系
从一开始
它可能有一个非常
非常基本的语法
然后随着时间的发展
大家觉得可能需要更多的元素
它可能就会加各种各样新的标准
比如说最基本的叫作
 basic
基本正则表达式
然后加了一些扩展的
比如说扩展的这么一个表达式
然后有时候发现扩展的也不够
它就会在扩展成为叫做perl
扩展的正则表达式
比如说现在我们看到加号
它在基本的正则表达式里边
没有被定义
它就是一个普通的加号
并没有一些特殊的意义
那么所以我们就要用扩展
这种正则表达式
所以我们打一个e
e是它的一个别名
应该
比如说我们可以看一下
egrep是啥意思
egrep是在这里定义的
我们可以看一下egrep是什么
egrep是一个一个脚本
在这里定义了一个脚本
我们那么回到刚才的
正则表达式里面
这个的意思是说
在3后边接任意一个数
这个任意数至少出现一遍
那么
那也就是说单独一个三
它就会出现了第一个三
至少出现一遍的
之后是
加号
这里边的问号
大家注意
这里边的*
跟刚才说的文件匹配的*
那意义是不一样的
这一点比较容易搞混
大家要注意
而这里边的问号
和刚才文件匹配的问号
也是不一样的
因为这里边的这些符号
都是
从一个规则演化出来
问号的意思
是说
要么是
04要么是14
这个意思
所以说我们可以把这个点
变成一个问号
问号之后我们看
它就是0次也可以
比如说3之后
0次什么都没有
然后30后边有一次匹配
比如说我们
比如说23问号
如果是这种情况
会出现什么呢
它可能或者输出一个
或者输出一个2
后面有个3
这样
对问号前面跟着
比如说我输出
输出多一点
然后我只找这种
第一个数是2
第二个数是3
第二数有任意多个3的
这种情况
我看
比如23 233 2333 23333
是什么的倍数
它不是
它匹配的还不是这种
计算
它还都是文本
文本匹配
这些都是文本匹配的
好
这些是几个基本开头结尾
还有这种
如果我不要求结尾
那就是各种
不要求结尾
可能就会比较乱了
所以各种23开头的都有
要求结尾可以把它限制住
然后现在我们可能会
这些基本的
我们可以做一些小练习
比如说刚才我想到的23练习
还可以
还可以有一些别的
我们可以怎么写
比如说
有没有2都无所谓的
有各种各样的是吧
那么大家就可以想一下
那是就可以过滤出任何你想要的
这种
这种字母
这种字符串
那么比如说括号是组合的意思
比如说我希望
比如我希望23作为一个单位
把它组合一下
让它开头让它结尾
好
这样就是23为组合
然后星号它可能重复
零次一次或者是多次
这样就可以把它进行组合
比如说我是+
它就至少得出现一次
也是这样
比如说我可以让3
或者不出现
它就变成了
2也是匹配这种情况了
然后22也是23
也是
比如说这种情况
首先是在grep里面
或者有2
必须得有二开头
然后3或者出现或者不出现
然后后边这种东西出现多次啊
最后是结尾没有别的
那么这些数据是什么呢
每次有一个2
后边就可以跟3
如果3结束了
就必须得有一个新的2才可以
跟新的3
是吧
人类的语言是苍白的
那么在正则表达式里面
我们可以做出各种各样的
各种各样匹配的规则来
而这个规则
因为它可以公理化
所以说做这个理论计算机的这些
研究人员
或者是程序 写程序的这种高手
它可以对着公理体系优化的
非常的
效率优化的非常高
使得我们过滤一些
字符串
可以让它有非常高的效率
这样只要我们可以把我们想要
做的事情
描述成正则表达式
我们就可以站在巨人的肩膀上
我们就不用自己来
写一个规则
来寻找这种字符串
如果我们可以把它描述成
这种正则表达式的话
我看一下一些其他的
扩展的符号
比如说这个是或
或 那么这个地方
我们可以是或者跟一个3
或者跟一个4
3或者4
那就是23或者24
或者2323
或者2324 2423
可以这样简洁的表达出来
但是我用语言来表达的话
人类语言表达就比较麻烦了
比如说4可以是可选
那么各种情况都
都可以有
是吧
方括号是可以选一定的字符集
比如说
我想从3~9都找出来
但我就要写3456789
这样写出来就很难受
写的比较多
比如34567
然后到7的话
那就是23235627
然后它们都可以这样子
这样写我感觉不是
很好
我可以用中括号
设定它的一这样一个范围
[3~7]
它就是代表了
第一个数是2
第二个数是3~7里边的某一个数字
然后这样的两个数
它们可能有一定的重复
比如说这和刚才是一样的
那么这个字符集
不仅可以数数
也可以数这些字母
 [a~z]这样
比如说
我用这个生成一个随机的字母
大家可能没这个命令
那么比如说我们输出
firefox 23456
就是这样
这时候我们比如[a-z]我们就
可以说这样
[a-z]然后空格
它就匹配了
比如说x就在[a-z]里面
然后它是空格有一个二
比如说
1~5
1~5
那也是可以匹配的
因为这里边有1个x 这里边有一个2
它们都可以被这个范围所匹配
进去
但是比如说6~9
那就无法匹配了
所以说这套语言
我们看这套语言
其实非常简洁
一共就这几种
这几种字符一个点
一个^
一个$
一个*
一个+
一个?
一对括号一个竖线
然后一个中括号
基本上就
表现力其实就非常强
很多我们日常的
这种
自然的情况的处理
都可以用
这些表达出来
最后比如说我们想说
这个字符范围里面
不包括a 不包括abc
就可以用一个
这里边^和这个^不一样
就是在中括号里面&表示取反
比如说
它不包括abc
不包括abc
不包括ax就匹配不了
这个数字这样可以匹配
不包括ax
就匹配不了了
就把a和x除去了
那么这个x就没办法匹配
那么不包括abc
它就可以匹配
不包括a到z 它就匹配不了了
因为x在里面
 如果a到w 那么x就
可以匹配到
这个上面
然后1~5
可以匹配到这个上面
这样的一个字符串就可以
可以了
大家有什么问题吗
你要把它去掉
你可以这样
让它必须在开头
然后就匹配不上了
^在这儿
所以说
我们一下子学了一门语言
这门语言里面全是这样的符号
这堆符号我们在想的时候
其实比较容易构造
我们可以写出来一堆这种
这种奇奇怪怪的符号这样
但是别人来读符号的时候
就可能会比较困难
但是我们构造的时候
比较容易
这个是我错的
这个是对的
好
大家可以体会一下
然后我们下节课
继续来讲
正则表达式
刚才场外听众
给我纠正了一下
场外听众
他是形式语言与自动机专业的
所以说
他讲了说公理语言表述是不对的
所以大家请听
把它划掉
你们的场外听众它们都在看
在看直播
我到时候把改一下
公理语言是不对的
就叫形式语言
形式语言就可以
理解为
从做一些基本的语言元素的假设
在假设基础上
演化出来一套语言
相当于语言有一个
形式化的定义
那么这个形式化定义
就使得我们可以通过一些数学的
结构
来描述语言
有这个结构
我们就可以通过机械程序的
来对语言进行处理和匹配
好
刚才关于正则表达式
大家有什么问题
没有问题是吧
好
还有一些扩展的语法
我再讲一个扩展语法
这里边我临时想到了
我们可以把它
就直接把这个范围写出来
比如说M这样写出来
它就是代表着
可以从M到N的重复性
给大家表示出来
比如说我们刚才那个例子
比如说
我让23
只有1~2
三个是不行的
大括号
有1~2
那就是说1 2
有三种
就是123
是吧
如果是0~2
就是 0 1和2
所以这个也比较直观
但是大家不一定能够一下子记
这么多
这些没关系
大家只要见过就可以
想到的时候再查都没问题
因为我们给大家发了
各种各样的备忘录
备忘小抄
用的多了自然就记住
如果你一直
一直没有使用的话
说明它不重要
忘了也就忘了
那就没什么问题
好
那么关于这个 正则表达式
我们来做一个作业
发布了
我们来做一个正则表达式的作业
做作业之前
我想到了一点
没有跟大家讲
就正则表达式
是非常普遍的一个形式语言
形式语言
无论从理论上
还是实践上
都有非常大的应用和它的意义
比如说
python里边
你也可以使用正则表达式
比如说python
我们如果搜索python
Regular Expression
你就可以看到
python的正则表达式
一般会缩写成regex
这样的缩写
我们可以看到Regular expression operation
这是python也支持的
在这里可以看到这个文档
这里边是python的定义
这个点
开头和结尾
然后* + ?
还有python里面又定义了一些别的
比如说*?
+?和??
这些是python它的扩展
然后 
{m}
是恰好重复m次
{m-n}是恰好重复m到n次
然后问号
这个问号是贪心的
不贪心的问号
这个或许会用到
但是大家要注意
只有这些比较基本的定义是
每种工具都共有的
但是其他的一些扩展
可能各个工具
有一些细小的区别
当我们在用的时候要试验一下
然后在这个工具里面
多看一下它的文档
还有一点是
反斜杠
从左上到到右下的形状
这个斜杠是取消这些特殊字符的
意义
因为刚才没有同学问这个问题
同学们可能会问说
我就想匹配美元符号本身的
怎么办
这个时候你
你把
\$
它就匹配了美元符号本身
它就失去了结尾的意义
比如说我想匹配本身
大家在用的时候多体会一下
多试一试
然后还有一些其他的扩展
这些其他的扩展
感兴趣的同学
可以来看一下
 Python其实加了很多种
扩展
这些扩展
有些时候都非常实用
我们看一下作业
我们来做一个
做一个今天的作业
好
这个作业
发群里一个
你们加群是吧
然后我们看一下作业
我们的作业都非常的有创意
然后我看的都觉得好玩
因为是公众号
因为物理系强大
我用python做作业不行吗
不行是吧
你明天再不限制于
lst
这么大
这都是什么语言
这个作业太好玩了
虚拟机
你用虚拟机里边
也应该带了输入法
比如说输入法
我知道输入法有这三种
可以看到
你可以从网页上拷贝下来
然后贴进去
应该是可以贴进去
可以贴
那第一个跟第三个
西北大学
河北大学
台北大学
北大西洋冷暖流
太神奇了
怎么了
你的是什么
WSL环境吗
怎么办
这里边有一点
我没有跟大家讲
shell的脚本
如果我们做这些输出的话
我们先来给大家补一下
shell脚本
比如说我要想这样输出三行
123的话
那么
我每次都打这三个命令
感觉很累
我希望把它放到一个文件里边
然后我能多次执行
就像刚才的bashrc
一样
我可以自己先找一个
创建一个文件
比如说是
123.sh 这个.sh表示
shell的脚本
让 sh里面
就记录下来
我要执行的命令
比如说像我刚才的
随便两个命令都可以说
这样
这样我就有了123.sh
我没存吗
比如说我创建了一个这样的文件
创建了一个这样的文件
放在这个文件
我看到
这个文件的内容就是
然后我如果用
用bash来执行这个文件
就可以直接把这个文件输进去
它执行了
我记录下来的这些命令
直接就执行
一般的shell应该也可以
这里边我们统一用bash
这样
在作业里面
要求大家把你的打的命令
记录下来
其实就是记录在这样一个文件
里面
让它输出这些
让它输出这些统计得来的个数
然后
就可以做那个作业
作为你的结果
大家可以继续做
  
