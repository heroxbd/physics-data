* 命令行
  我们已经接触了几个基本命令，
- ls :: 意为 “list structure”，列出当前文件夹下的所有文件。
- cd :: 意为 “change directory”，改变当前路径的位置，跳到另一个文件夹里。
- sudo :: 意为 “super user do”，用最高权限来执行指令。
- apt :: 缩写是“Advanced Package Tool”，是软件包管理器，有些默认的环境里面没有 python3，我们是通过它来安装上 python3。
- vi :: 是文本编辑器，这个编辑器不是当前流行的风格，但是非常强大，如果同学们有机会去深入学习这个编辑器，会发现它是完全是另外一个非常强大的世界。
- nano :: 也是文本编辑器，相比 vi 简单易上手。

  “现代”风格的文本编辑器至少有一个窗口，有菜单，有光标，但这是1990年代发展出来的。对 vi 和 nano 这样的风格，操作都通过 Ctrl-W，Ctrl-X 等快捷键完成，同学可能不太适应。nano 编辑器确实较简陋，只进行基本的操作，不是主力用编辑器。这些编辑器是应急使用，做一些快速简单的改动。每个人都会发展出自己的编辑器偏好，发展出自己最喜欢的工作方式，在学习的过程中要慢慢体会。

  POSIX 环境的设计理念是每一个命令都要完成且仅完成一件小事，这叫做“Do one thing, do it right”。这可以促进分工协作：用户可以把各类小巧的工具挑选出来，组合起来，应用各种各样的场景，有无限可能。连工具的设计者都没有办法预测出来用户究竟是怎么用他的命令的。

  无穷无尽的组合可能，会让大家在入门时迷茫。世界太大了，我们要挑选一条路会很难受，特别是选择较困患者。一旦能够入门，它将是威力巨大的一个技能。我们不要求每位同学都能够入门，大家掌握能够完成作业所需要的最小限度。感兴趣的同学可以选择一个命令环境的自学教程。注意国内教程和博客的水平水平参差不齐，经常在博客中会有很多错误的信息，大家在查资料时不要误入歧途。

Git 给我们一个“时光机”，能够高效地记录自己过去的工作进展。同时在空间上，Git 辅助团队协作，
可让大家互换差分，高效协同。这种合作模式促成和造就了全世界的大规模的项目的崛起。

** 加密
   很多同学是第一次手动操作加密通道，我们看到在网络空间人与人是如何互相验证和建立信任的。如果这些加密可信，我们就可以与队友和远程的服务器不断地交换差分。

比如说在讲义里面
发现了这个不太好的地方
错误的地方
需要修改的地方
或者是错别字
或者是
或者是你觉得应该加一块什么
内容
你也可以在上面进行修改
然后把差分发给我
这样我就可以把你的差分
应用到
我的这些文件上
这样我们其实就实现了
协作团队的协作
好了
咱们继续
如果还没有clone下来的同学
可以到课下继续完成
因为这部分
我已经上传到网络学堂了
昨天有看到同学们作业
有很多
有很多同学
写了比较长的课程感言
非常感谢大家
能够积极的给我反馈
之前跟大家讲过说
这门课是第一次准备
而且在全球范围内
也只是去年Berkeley的物理系
有这样的课程
所以说能够参考的
先例比较少
那么在这个过程中
如果有同学觉得太难或者太顺
或者是觉得
设计的逻辑比较混乱
一定不是你的原因
是我的问题
所以说非常感谢同学们
能够给我反馈
有很多同学反映说
昨天的内容比较多
不是特别成体系
那么因为昨天是第一天
我们要准备很多材料
其实就像造房子的时候
我们知道
最后一个房子是这样的
但是我们准备材料的时候
可能要准备铁 砖 木头
这些东西看起来
好像没有什么联系
但是昨天大概处于这样一个阶段
那么但是这里边所有的材料
都是我们马上都会用到的
不是说悬空的一个孤立的东西
孤立的技能
不是让大家学习屠龙之技
那么马上会用到自己
给大家解释一下
这个逻辑大概是什么样的呢
为什么要选用GitHub
作为协作平台
因为它是目前来讲
全球最知名的协作平台
但是也有跟GitHub类似的平台
那么越来越多的科研成果
都是在GitHub
或者类似的平台上发布
也就是说
目前
我们现在这个时代
特别强调是
可复现研究以及开放科学
比如说
当我们发布一个论文的时候
他这个论文使用的是什么样的数据
这个数据是怎样处理的
怎样得出来论文里面的
这些图和表格
或者是除了论文
还有一些报告
比较规范的做法
是把整个的这些过程
同时跟论文一起发布在一个
共享或者协作的平台上
比如说GitHub
这也是我们设计在GitHub
让大家做作业的原因
那么交作业需要GitHub
希望大家能够在日常工作中
体验
体会这样的流程
大家还在clone那个东西吗
卡了是吧
因为
六教的网站了
还是教育网站了
今天校园网确实非常不稳定
因为从早上开始
整个东主楼就断网了
那么我们六教离那非常近
所以有可能会被殃及
所以同学们先不用纠结
这件事情
可以先把它放下
因为大家只需要两条命令
就可以把讲义的过程
给他克隆下来
并且看
所以说大家即使挂一个4G
它也不会花太多流量回宿舍做
也没有问题
你要进入到目录里面
你先cd到目录里边
然后再“git log”
然后我又落了一个命令
对不起
大家热情太高涨了
如果是网络问题
大家可以不在意
不用太在意
今天应该主要是网络的原因
不是大家操作的原因
所以我们先把这个事放一放
好不好
刚才同学问题是
我刚才克隆的
文件夹的名字叫“physics-data”
而如果已经有一个physics-data
存在的话
会出现什么状态
什么后果
然后它会出错退出
告诉你
已经有一个存在
让你用另外一个名字clone
如果你之前在当前目录下
已经有这个目录的话
你再克隆
它默认也会有目录
重名了的话
他会提示你
并且退出
你需要先clone才能pull
不能直接pull
自己的是我取的名字
然后这个是
你可以取别的名字
比如说在后面再加一个参数
它就是你起的名字
它默认是
跟远端的GitHub上的目录
是同名的
也可以
对
你在后边再写一个其他的路径
你就可以有
clone下来的时候
就是另一个路径
你如果默认的来clone的话
我们默认clone的话
它就是一个physics-data
是吧
然后如果换另一个
它就会clone到另一个路径里
然后新的文件夹就叫 another name
刚才同学那个问题是说
如果在这个地方
如果有另外一个文件夹的话
同名的文件夹
你clone的话会失败
那么
如果你在
在命令git clone后面
加了一个
你自己取的新名字的话
那么你clone下来的文件夹
就可以
取成你的新名字
所以说
一旦有这样的冲突的时候
就可以用这种方法
考虑到网络问题
所以大家不用
太执着地
把这个事情马上做完
好吧
我们继续
我们继续
然后下节课
大家再进行实践活动
好吧
刚才讲到了
GitHub
现在是一个比较流行的
在科学界也比较流行的平台
那么我们交作业
使用GitHub
就需要用这个git的
就是说可以
咱们一会儿
咱们先继续
然后那个问题
咱们下节课解决
好
感谢大家的热情
因为主要是网络问题
但是git的客户端中
现在大家也可以找到许多
图形界面的客户端
但是我们在使用的过程中
图形界面客户端都非常的不好用
有些时候会出现许多
玄学的错误
然后很难修改
最后修改的时候
还是要用
命令行把它修改
所以说考虑到目前的状态
命令行的git
是我们的最佳的工具
所以说我们在课上
是教大家使用git的命令行
希望大家可以理解
然后git命令行
其实是依赖于POSIX环境
所以说昨天我们安装了
POSIX环境
在windows下面是装了WSL
在一个 mac OS
或者是Linux系统
默认的环境
就可以用了
然后在POSIX环境里面
其实需要用到文本编辑器
但是文本编辑
因为大家
还没有太多的经验
所以昨天我们默认用了nano
今后大家可能会有自己的文本编辑器
就可以
不按照我们的
不按照我们带领大家做的去做了
大家可以按照自己的方法
来完成它
那么一般的工作中
其实nano是一个常用的
作为应急的编辑器
有很多更高级的编辑器可以使用
比如说在网络学堂
我们之前发的
通知里面有一个VSCode
Visual Studio Code
它是最近比较流行的编辑
也跟大家使用
特别是 Windows
使用Windows同学的使用习惯
非常地友好
那么另外一个久负盛名的编辑器
应该是流行了40多年
依旧非常非常强大的编辑器
叫做Emacs
这个编辑器是我正在使用的
比如说编辑器
我在用来使用
做我们的
讲义的时候
就使用了编辑器
那么第三个编辑
也是非常的强大的
也是昨天我们接触到了Vim
但是这两个编辑器的学习的过程
其实学习的曲线都比较陡峭
也就是说
最开始的一天或者三天
会感觉自己都在和自己在打架
心里面有两个小人在打架
但可能大概过了一个星期之后
就会发现
与计算机的沟通
可能有了一个非常大的飞跃
但是现在
因为有很多流行的
非常优秀的编辑器
所以说大家可以
进行适当的选择
在其他中
每个人都可以有自己最喜欢的编辑器
那么昨天同学的反馈
主要是说我操作的太快了
没有太跟上
然后最后回到宿舍
是通过自学
然后把git的基本操作完成的
这个要向同学们
道歉
因为昨天后来时间不够了
所以我一着急
最后发现
不应该这样做着急了
反而会出现反作用
让同学们更加懵
然后同学们也更加着急
所以说今后我会注意这一点
还有同学反馈说
与之前学的课程差距很大
就是说课堂纪律有点乱
这个也是有的
但是我想跟大家讲的是
我们
其实有一部分是像这样的讲座
时间
还有一部分
是实践的时间
因为小学期
我们主要的课程设计
是注重实践
以非常紧凑的几天
让大家掌握一项技能
而不是掌握一个理论
或者是掌握一个思想方法
当然在这个过程中
也在向大家传达
理论和思想方法
但实际上很多时候是需要实践
但实践过程中
因为同学们
程序方面的
对物理方向的同学程序
程序方向的基础很不一样
所以说有些同学
需要帮助一下周围的同学
希望这个同学觉得
课堂有点乱的同学里面
也能够理解
那么大多数同学都表达了
需要更多的帮助
因为面对这个环境非常的陌生
所以我会经常
做一些这样的总结
然后答疑的时间
也会适当的增强
拉长
然后助教的同学
可能也要稍微再辛苦一点
再多一些工作量
然后帮同学答疑解惑
而且在暑假的时候有很多
因为是实践的时间
那么大作业的时间
也会再给大家留一些时间
来讨论或者研究大作业
因为我们目标是让同学能够走一遍
并不是说拿出来大作业来考大家
所以希望同学们能够放心
因为我们的目标是一样的
会一起努力
让大家能够感受到
整个的技能的关键
整个的流程
那么其实我在初步接触环境的时候
也是非常的痛苦的
我之前写过几个笔记和文章
然后在这里面截取一段
和大家比较一下
我觉得肯定大家是比我更聪明的
比如说
是的
那个时候主要是
我也是被迫接触的环境
所以说最开始
最开始是安装系统
我因为以前
以前也是在同学中
算是一个高手
经常帮助同学重装电脑
哈哈哈哈哈哈
然后我觉得安装系统
这会是一件非常小case的事情
所以说我就直接
拿了很多光盘
在我的机器上装
结果装了能有至少20遍了
然后也没有安装成功
基本上度过了一个非常黑暗的星期
然后那么最后的时候
终于
终于通过查字典的方式
把错误信息读懂
应该是一个光盘坏了
所以说
所以大家可以想象
当时
一个小孩的心情是什么样的
这个肯定是要放弃的
而且我第一次使用的时候
也不知道passwd是什么
就像昨天同学们
打了passwd
经常mismatch之后
就直接被锁在外面
还有重装这个系统
然后有些同学就感觉非常沮丧
感觉这个系统太坑了啊
其实我之前也是遇到了这一点
因为进到这个系统里面
有个password
然后我发现
我好像从来都没设过passwd
根本不知道是什么
所以也没有进去
因此我又重装了一遍系统
然后重装一遍系统发现
依旧遇到这个问题
所以说在当时是
也是非常非常令人懵的过程
大家可以看
其实2002年到了2003年
经过了一年
我依旧没有搞定
到底什么是passwd
后来在试机的时候
屏幕上 login
password
依旧是
没有很好的理解
包括基本的命令
也没有熟练地掌握
所以说在当时
经历了这样一个很奇怪的过程
所以说同学们
昨天可能遇到一些
困难
可能是什么地方感觉
感觉大家指点一下
说打这个命令再打那个命令
再打那个命令
然后打了10来个命令
然后神奇般的就好了
或者神奇般的不好
然后通过了
也不知道为什么
没通过
也不知道为什么那么
这样的感受是很正常
然后那么我们为什么
这个系统这么别扭
我们为什么还要学习它呢
主要是因为
在大规模数据处理
还有计算的过程中
我们其实是站在世界的前沿
并没有
并没有其他的开发者
给我们开发出来现成的工具
来完成这些科学的任务
但是我们知道
在这个环境里面
有其他的很多小工具
这个开发者也不知道
他能够被用在科学计算上的
这些小工具
反而会更加有效地
完成手边的任务
比如说如果一个学科
它发展出了成熟的工具
比如说我们可以
点几下鼠标
它就可以给我们制出一个
完美的图的话
那么一般来说
这个学科
就已经变成工业的级别了
或者说在实验室中有这样的
可能
师兄给大家准备了
这样的比较友好的界面
但是这些界面
往往是比如说年久失修
或者是会有各种bug
所以说
掌握
掌握这个技能
是非常有用的
而且它只是入门的时候
会痛苦一点
那么在经历一段时间之后呢
发现
它可能也就成为
思考的一部分
所以说我非常希望能看到
至少我们中的一部分同学
能够理解这一点
然后今后能够掌握这些小工具
然后创造出来
前人所从未创造出来的
组合方式
和操作方式


** Python
   好
从这节课开始
我们会进入python的学习
那么python的学习
这也是一个
比较枯燥的东西
因为大家应该都上过程序设计基础
我们可能是要从
程序的基本构建
变量数据类型学起
那么这个过程
已经学习修过
程序设计基础的同学
我觉得没有必要再经历
整个这一遍了
所以说接下来这个星期
我们会有一个主题
那么这个主题
就是最近发生的 G20峰会
在大板G20峰会
在这个峰会里
我们国家主席习近平
和美国总统Trump
他们举行了会晤
就当前中美的贸易摩擦
还有这个地区的争端
这些问题交换了意见
这是全世界
全世界瞩目的一个事件
因为目前国际形势来讲
这两个大国的这个关系
还有博弈
其实影响了全世界
而且我们
我们自己在高校里边
在学生里面
我们也非常的关心
因为它影响到
比如说作为学者去美国开会
或者是访问
经常被拒签的情况
或者是这个同学去暑研
会有这种非常多的麻烦
所以说
这个历史事件
还有Trump政府
对目前的关系
影响是非常巨大的
让我们回顾政府是如何
如何当选的过程
其实很有意思
在2016年的时候
大家都觉得
大家都觉得这个Trump
是非常不可能当选
那么在竞选的过程中
其实出了一件非常骇人听闻
惊天动地的事情
那么使得选举
出现了一个非常大的转折
那么这个事情是什么呢
大家肯定是有所耳闻
这个就是当时震惊世界
邮件门事件
这个事件主要是说
川普的对手希拉里
他们在没有使用白宫的
自己的邮件服务器
而是使用了私人的服务器
然后私人的服务器
其实防范的措施不够强
所以说这个服务器就被入侵了
之后
希拉里团队的很多的邮件
就都被泄露了出来
那么泄露了出来之后
大家看到
政客
在竞选的时候讲的这么多
非常漂亮的话
那么在背后
可能有是完全不一样的世界
那么在当时媒体也是竞相报道啊
说
有各种各样的分析
出现了各种情况
有各种单位也介入调查
那么我们这个课上
因为第一个星期
我们还没有掌握很多的
很多的工具
那么第一个信息
其实非常适用于来
来对原始数据进行一下考察
那么这个课程文件在 url 里
也是在我们之前的软件库里
大家还是不要下载的
因为还是很大的
大概500M
考虑到刚才的情况来说
肯定网络是不够的
我先带着大家看一下
这个邮件的结构是什么样的
我们看一下这个文件是这样
这个人的名字
是竞选团队中的一个人
然后 M Box代表是 mailbox
是一种电子邮件交换的结构
我们平时发电子邮件的时候
都是以这样的数据
在服务器之间传递的
那么这个gz 是代表
代表压缩
也就是说mailbox被压缩了
我们在压缩的时候
用一下命令
大家不用跟着我做
大家只要现在也要观看就行
刚才的问题是说
如果同学们回到
在课下
或者是一会儿下载了之后
能不能看到东西 是一样的
好
我们下课
然后下节课
我们再把最后一点讲完
好
我们继续把
把上节课的邮件
给大家介绍一下
我们看到
其实邮件的设计
体现了透明的原则
因为我们可以想象
比如说我们发一个邮件
不仅有邮件的内容
肯定还有邮件里面
其他的一些信息
方便这个服务器来处理
由这个服务器处理
那么在这个过程中
其实服务器会给邮件搭上很多
标签
而这些标签其实都是
这些标签都是人类可读的
也就是说在这个里边
其实邮件的传递的过程中
在它传递的中间状态
每一步都是可以由人类可读的
所以它体现了
像我们讲的
透明原则
我们看一下有这个邮件的
它的基本的
基本的格式都是这样
有一个字段
然后字段有一个冒号
后面是它的值
这都是received
被谁receive
然后在什么时间receive
我们可以看到
这里边有两条
就是说是这个邮件
先传递到这个地方
就传递到那个地方之后
成功的投递
被收件人看到
那么还有
这些我都不仔细讲
感兴趣的同学可以
可以了解一下
邮件的数据结构
但是我们看到了这一点之后我们
最起码可以了解到
整个的一个邮件的格式
就是说有一个
关键是后面冒号
后面是跟着它的
数据就可以了
因为它后面还有
这样的关键词
这样的方法
以及在后面
这样
对吧
还有这样的事情
这里都是一样的
我看到更多的关键词
比如说
是吧
然后还有
我们可以看到
虽然它是人类可读的
但是我们人类要一条一条
这样读下去
就非常的笨是吧
然后前面是邮件头
然后后边是这个邮件的
我们再看看他
这是第一点
它邮件的内容
邮件内容的背景格式
这里这个是另一个问题
然后到这里下一封邮件
我们可以看到
我们可以看到
我们用肉眼看
可以大概找出一些规律
但实际上我们想一下
整个有几百万份文件
那么这样的不是水平的问题
要把这个规则写下来
要用程序来自动的把它处理一下
没有加密
是这样
这个邮件它有一定的格式
那么我们要把这个格式
先要理解出来
因为它是原始数据
它目前这个格式
它不是给人看的
虽然它设计的来讲
让人也能看懂
但是它里面有一些其他的信息
在具体的邮件
那么在我们需要把这些信息
理解了之后
才能够更好的把它的内容
实际上这也是
我们遇到的数据的基本特征
它都有一些描述性的
对数据的描述性的部分
相当于就是
邮件头
然后后面有一些
基本内容数据的
那么这个邮件我们看到很长了
比如说我们可以看到
这个邮件里面
虽然很长
我们还是
可以看到一些比较有意思的地方
我说我们看一下
这里面有没有清华的人
在
然后我们发现
我发现
其实是有清华团队在这里面
是的
然后
然后但是他的邮件内容
是用了一种转移
所以目前我们看不出来
你来课后研究一下
它写的什么内容
base64
这是一个
这是一个非加密的格式
而是可以
然后那么我就知道
其实这个团队
也是有很多教育机构的
我看看有什么
有道理
这里面是有的是吧
所以说
但这样看
肯定是非常的随意
我们没办法得出一个系统性的
结论
所以说在这一周的学习的过程中
我会逐渐的掌握一些工具
然后能够对这一部分
对这些邮件能够
有一些更系统性的总结
然后得出一些更可靠的结论
那么在这个过程中
我们依旧会有一些像
昨天那种比较循序渐进的小作业
然后大家有兴趣
可以利用学习的工具
来分析一下
邮件的库
那么我们看一下这个邮件
一共是483M
在压缩之后是483M
这其实是截断的一个小部分
总共一共有
大概2~3个G的邮件
就是说
如果同学们对很感兴趣的话
我们可以把整个的数据直接拿过来
您刚才是怎么就是说
对
这就像搜索一样
就像简单的文本编辑器里面
能搜索出来
这个并不是
特别玄学的操作
好
希望同学们能够感受到
其实我们生活中的各个地方
都存在着各种各样的数据
然后如果我们能够拿到这样的
原始数据
对它进行系统性的分析
我们就可以得到第一手的资料
但是如果我们比如说
听媒体的总结的话
那么其实有些时候
原始的情况我们未必能够掌握
所以说不仅是科学研究之中
也在生活中也会遇到
同样的我觉得
另一方面
也告诉我们
如果我们在科研中
科学研究中
或者是实验中
能够掌握这些技术
那么在实际生活中
我们学到了
这些技能也都是
也都是接地气的技能
好
这一部分我先介绍到这
然后接下来
我们会请陈嘉杰同学
好的好的
请陈嘉杰同学
就小助教的情况跟大家
跟大家来公布一下
小助教的申请的结果
我们昨天跟大家
初步介绍了python语言
以及我们为什么使用
python来完成我们的一些目标
那么python我们再简单的复习一下
python主要是一种解释型的语言
相对于编译型语言
比如说C、C++
它更容易调试
我们解释性的语言
我们可以直接看一下
内部的这些变量结构是什么样的
编译型的可能就需要
特别的调试器来进行
那么
python的语言语法风格比较简单
即使没学过python的人
看了一遍python程序
也能够大概地读懂
它其实也大大降低了
程序设计的门槛
这也是最近为什么
突然出现了
这么多程序员的一个原因
那么python它
同时它还可以直接调用很多其他的库
我们知道Fortran
它是从60年代70年代
就开始的
科学计算的基本语言
那么经过这么多年的积累
可能有非常多的
非常优秀的一个科学
科学的数据
理论数据处理
还有微分方程
还有各种工具库
存在
这样的一个宝贵的财富
我们也不能抛弃
所以使用python的时候
它还可以顺着调动从前的一些
工具
因此这也大大地丰富了
python 
作为科学计算工具
所能调动的工具范围
同时它也可以调用C或者C++
或者也会调用这个R语言
进行统计分析
所以说
python它的特性
不仅可以使它自己的功能增强
还可以使团队的合作
更加顺畅了
那么还有一点
它也是一个通用的语言
你不仅在科学研究里面
可以转化成
其实在生活中
它使用的是更多的
比如说我举两个例子
一个是它会用来生成操作系统
和管理操作系统
比如说
比如说Gentoo Prefix
是我目前所参与的一个项目
那么另外
它也可以是极简的网站服务器
比如说在我们
上学期所开展的
上个学期开展的竞赛等等
那么其实有一部分评分的部分
是用python的
写成了一个极简的评分器
所以说
python
其实是非常易于上手
易于开发
实际的使用中也非常的广泛
希望大家能够
能够喜欢上python
在学习的过程中
那么python的学习资料
我也再讲一下
因为很多同学在假期
一直
比较喜欢自学
而且我也没办法
咱们每一个部分
所以感兴趣的同学
大家可以找一些资料
进行更加深入的学习
比如说这个
这是一个非常简明的通俗的
入门教材
这本书从最开始发行开始
同学们学编程非常地痛苦
经常不知道
觉得那个东西能干什么
但是自从书的作者
他上课的时候
把自己的讲义
自己写了一点解释之后
然后同学们都知道了
每一步都有一个目的
有一个动力
这样
他的书
也是根据这样的思想设计
所以说学习python的时候
用这本书读起来
其实也很开心
然后另外一个
非常知名的在线教程
也就是说作者有一个雄心
也就是说让世界上每一个人
都学会编程
那么所以说它是非常
新手友好
对于基础薄弱的同学
可以发现
它讲的其实非常的非常的详细
但是有基础的同学
也可以在教程里面
得到一些灵感
那么还有一个部分
是供一个基础比较强的同学
实际上是一个网站
这个网站其实是
这个网站
其实是把python中的
所有的例子
都总结到了
一个网页
那么这个时候
比如说
一个同学非常深刻的掌握了
C或者C++
或者有的同学
非常熟练地掌握了Java
那么你在学习一门新的语言的
时候
其实所消耗的精力
就会非常少
那么你就可以
把这个例子看一下
所以说我感觉1天
应该就可以把
所以说对于基础特别好的同学
那么这个例子其实也是一样的
如果我们学了很多其他的语言
再来接触python的话
那么可以非常容易的就掌握
同理
如果这是同学们的
第一门语言
或者是第二门语言
学完C然后学python的话
那么如果大家掌握的比较充分的话
今后今后无论在生活工作或者
学习中
可能要接触到其他的更新的语言
包括我们说最佳工具语言
肯定今后也会有新的语言出来
它可能是更好用
或者更流行
或者你的队友坚持要使用
这个问题
那么如果你非常熟练地掌握了
python的话
那么也可以非常有力地
把这些思想
迁移到一个新的环境
所以说大家在上课的时候
要注意一点
虽然我们使用的教学的时候的
内容
是借助python
来跟大家讲
怎么进行
大数据处理
或者是实验问题的目标
那么在实际当中
我们不要把思想拘于python
你要知道这个
其实世界很广阔的
好
那么接下来呢
我们看一下python的基本环境
昨天作业里面有一部分是
安装了python之后
在命令行界面就可以
进入python交互模式
好
这里边有一点
很重要
有些同学会觉得
一下就打了一个python
这里面其实是一个坑
这个坑
已经经过了大概20年的时间
目前还没有被解决
也就是说python是有两个版本
一个python2 一个是python3
当然还有python1
这个历程是这样的
最开始
python发展到python2的时候
已经是非常受欢迎的语言
然后社区里面的开发者呢
就开始反思
觉得之前自己犯了很多错误
就是希望把这个错误进行改正
所以改正的时候
有些错误改正的时候
就会导致
现有的程序无法使用
怎么办呢
就加了一个版本号
并且执行的程序的名字
也不一样
加了一个3才能完成
这样的话
如果是按照新的被改动之后的
所使用的python3
但是如果是按旧的
一般叫python
比如说我这个是
2.7
那么如果打python3的话
会出来
3.5或者3.6 3.7
其他的
情况
所以说大家注意
我们的教学环境当中
使用的是python3
因为它是更现代
更优秀的一个
语言
然后
大家如果不小心打了python
可能会出现一些奇怪的错误
就是说这一点
然后其实python还有一个
增强的互动环境
叫做ipython
顾名思义 i的意思就是
interactive
同学们可以试验一下
它这个环境好在什么地方
就是有可能有一些补全
对于我们在交互性操作的时候
比较友好
那么有些同学的
这个环境里没有ipython3
对于所有apt系统
可以通过来安装
但是它不是必须的
因为有些同学会喜欢
更喜欢一种默认的python
然后有些同学
会比较喜欢用ipyrhon的环境
然后今后我们也会介绍一些其他的
python环境供大家选择
今天我们介绍这两个
那么如果想使用
ipython3的话
可以使用就是那个
来把它安装上
对于mac的同学们
应该是有其他的安装命令
比如说
我觉得把这个apt换成
相应的
现在的网络还可以
有同学提到说
如何用jupyter来运行python
那么jupyter的安装
我们jupyter也是一个
既然同学问到了
我就来讲一下jupyter的问题
好
比如说我这个slide的
就是通过jupyter来准备
然后那么jupyter其实是
由ipython发展起来的
另一个环境
这个环境的好处是
我们可以在网页上
来进行python的操作
比如说
比如说讲义里面的这些操作
都是在网页上这样写出来的
2 + 1
2 + 2
这样就可以在网页上操作
然后它的好处是什么呢
可以规避掉命令行
那么所以说它的特点就是
用网页来操作
那么在很多时候在探索的时候
它是非常有效的一个工具
然后如果它能够和命令行结合起来
就是探索的时候
使用这样的环境
然后在批量执行的时候
使用命令行的话
将是一个非常好的组合
然后由于安装这块的
过程稍微的复杂
我们会整理一个安装的教程
然后课下放到
网络学堂供大家参考
因为jupyter的历史
也是从ipython发展起来
大家希望interactive更加interactive之后
慢慢的就发展出了
基于网页的这种工具
所以到了jupyter的时候
只要可以用网页的人
就可以进行pythno编程
所以这也是使得
目前使用python的用户
非常多的一个原因
我只能说Rust真香
然后他说了一个大家不太懂的
这个名词是另一种计算机语言
那么我觉得
我觉得这个事情
可以分两方面来看
一方面是说可能有一些
基础不是很好的人
就会以为自己学会了编程
然后这可能是会被抵制
特别是如果掌握了一些
非常肤浅的操作
然后就会在网上这个招摇过市的话
他可能会被人讨厌
但是从另一个角度来看
如果一个人发展出来的工具
发展出来的学科
然后受到了全社会的关注
非常令人荣耀的事情
我是这样理解
所以刚才那个问题说
jupyter问题非常好
所以我们也会
给大家准备教学
教大家在本机安装jupyter
包括我们实际上目前使用的命令行工具
它们可以有机的结合起来
组合出来意想不到的一个效果
如果我们安装了的话
这样一个过程
我已经安装完了
我是出现了一个问题
那么有这样一个增强的环境下面
同学们可以既可以用这个环境
也可以用这个环境安装
大家应该都已经
在这个python里面
也可以通过这样的一个
看一下这个这个
这个部分今后我们会讲
但实际上
我们如果输入这样的命令的话
我还是说一下
看到昨天的作业里面的
作业里面的
不是的
像我这个python
其实是python比较新
但是后边的编译器比较糟糕
回车就行了
你说这个环境里面
我们就可以做这些基本操作
这样就可以看到我们python的
版本号
接下来我们熟悉一下环境
一切的
高级的功能
其实都是从这些基础的功能开始
基本的操作开始
比如说
这个环节里面
我们可以写一个
基本的代数运算
这个颜色不是很好
这是一些基本的操作
大家都可以进行操作
遇到问题的同学请举手
非常好
我们昨天环境配的
还是比较成功的
其实没有问题
好
那么还有一些其他的运算
比如说
乘法
那么2的7次方
是这样写
两个乘号
然后3/2是这样
这是一个严格的除法
如果要整除的话
只取它的整数部分
这样
那么3%2
就是说取它的余数
就是这些基本的操作
大家可以熟悉一下
比如说
我在这里面是2*7
对吧
2的7次方
我们也可以做一些高级的功能
比如说阶乘
阶层需要使用一个库
使用 math 的库
要 import math
我们想一下3的阶乘
应该是6
比如说66的阶乘多大
我们可以看到
这是python的一个特点
这是一个python的很重要的特点
它的整数是高精度的
什么叫高精度的
就是在计算机的硬件里
其实每一个
每个数
它存储
是要一定的内存空间的
一般来说
我们之前如果学习C语言的话
我知道有些整数是在用
16比特 有些占用32比特
有些占用8比特
有的占用64比特
那么它这个空间
整数空间是一定的
但是python在顶层之上
它又进行了一层抽象
它使用软件
其实实现了这样的高精度的
也就是说
它其实给了我们一个更好的接口
接口的整数
是无上界的
当然不是完全的无上限
当然这个计算机是可能崩溃的
当这个数太大了
可能也不会崩溃了
但是至少原则上是没有限制的
比如说二100次方
太小了
比如说2的10000次方
所以说这是python的一个特点
它可能这样做
这样做
它需要经过许多
我们可以想象
它内存需要进行很多的判断
或者是很多软件上的考虑
那么它可能会降低效率
但是对于现在
现在这种计算机硬件的水平
效率损失来换取
这种方便的接口是值得的
交流
就是慢
比如说我们可以想象一个语言
它既然这么大的数
它没有办法映射到
计算机的内存里面的话
不能说放在一个64位里边的话
可能要放很多64位
才能组成这样这么大的数
那么这么大的数
我有两个非常大的
也可能不那么大
所以位数可能还是变化
那么这些不确定性
都会
让工具的内部逻辑
加很多这样的逻辑判断
它肯定是要损失性能
但是对目前的计算机
在整体硬件性能来说
损失我们是可以忽略掉的
其实这也是
这也是我们作为我们这门课
实验物理的处理方法
这门课的一个基本的
基本的价值观
比如说
如果能够节省人类的
人类的时间的话
我们不惜浪费计算机的时间
这一点其实是和
计算机研究人员
是有一些区别的
我们面对的是机器
所以说
所以说一个
比如计算机设计
大家肯定是说
让它更快
然后这个算法更巧妙
效率更高
然后对于我们来说
我们判断是说
我们用最短的时间
达到我们需要的一个效果
同学们可以在实践中体会这一点
那么我当时的想象力
也不够丰富
那么关于整除
有一些基本的约定
我们看一下这几个例子
那么5整除3
-5 整除 -3
其实是
-5整除3
目前的约定是-2
也就是说
往下面降
大家注意这个约
因为有些语言
它会是按照绝对值
最小的方向去
去降
就是说-5整除3
它会给出-1的结果
所以说
这些我们做一个实验的时候
知道了
同样的整除符号
也会用在浮点数上
然后取余号也是一样的
比如说
它如果整除的部分是-2的话
那么它的余数就是1了
同理
对于这些浮点的
都可以告诉你
我们可以做个验证
比如说
那么这一点
我们就不直接把它列出来
大家看一下就可以理解
这是第一点
那么其他的是
另外一个是布尔运算
它是进行真假运算的
我们在数理逻辑里面
刚才在课下有同学问
大作业是
每个人做一个大作业
还是大家形成一个小组
来做大作业
我一开始想着每个人做
主要是感觉小组
小组的话不太好评分
应该经常感觉大作业
好像
经常只是一个人
一个同学
carry所有的同学
所以刚才同学
我就说那就一个人
一个人做一个大作业
但是同学
反驳我说如果是这样的话
没办法体现git的先进生产力的
我觉得他说得非常有道理
我有当时
虽然说无法反驳
所以是而且有了git之后
我们也可以看
哪些同学
每个同学花的差分
那么每个同学的相对贡献
大家也能看见
所以说
所以说在这种情况下
一个人carry团队的情况
也能够被发现
所以说我会仔细讨论一下
我觉得这个同学提的意见非常好
大作业也可以自定义
那么如果我自定义一个大作业
岂不是只有我自己做了
没有队友了这怎么办
是这样的
所有自定义的大作业
经过我们教学的团队审核之后
自定义大作业都会公开出来
那么其他的同学
对其他同学也可以选
如果其他同学
按照标配的这三个大作业
可能有的同学一个感兴趣都没有
那么有的自定义的大作业
其他同学提出了新的大作业的话
如果你感兴趣你也可以加入
即使是不按团队来做
那么你当然也可以加入
使用其他同学提出的大的解决方案
这个没有问题
我明天会给大家一个讨论结果
以及团队做大作业怎么评分
制定的细则跟大家分享一下
然后大家可以继续提意见
非常感谢
我们回过来讲
python的基本操作
布尔运算它是真或者假
我们在学习数理逻辑的时候
也都遇到过
就是说
这里我们不演示了
大家我可以讲的稍微慢一点
然后可以让同学
有空闲时间来
来试验一下
那么布尔运算
主要是True和False 
就是真和假
那么它的否命题
就是
not True
它返回的值是 False
如果是 not False 的话
返回的值是True
and 和 or 部分呢
是
是和我们之前
数理逻辑里面的定义是一样的
所以这个表达式
用一些and连接
所以它的值是False
然后这个表达式
用 or 连接
那么实际上这里面涉及一点
它的内部表达方式
这一点和其他语言是很类似的
比如说这个
True 和 False
不是一个全新的
全新的形式
它实际上内部上
在内部的表现形式当中
True 这个表达
比如说我 True + True
如果是严格的数理逻辑的话
那么它只是一个01运算
组成一个这样的加法群的话
那么 True + True应该还是True
但是在这里边 True + True 变成了2
其实可以试一下 2 and True 
我刚才打错了没有打3
所以说
那么它还是符合数理逻辑的定义
比如虽然说 True
加上 True
对吧
它这个还是True的意思
还是真的
对吧
所以说python的设计
还是符合直觉和数理逻辑的定义
那么我们也可以
违法操作 在布尔运算当中用乘法
那么因为True的本质上
它代表是1
然后False默认值是0
所以说在这样的
乘法之后
它的结果就是
那么True和False
也可以参与其他运算
比如说这样看起来
比较奇怪的地方
那么我们都带过来方便大家理解
到底True和False
具体内部
是怎么表示的
今后我们使用一个条件语句的
时候
有些时候会碰上这些问题
因为有的时候我们可能会写错
如果写3>2-5
比如说这一部分
其实比较繁杂
我们没有必要去记
实际上用的时候试验一下就可以
但在我们实际上今后操作的时候
可能会遇到这里边的某些约定
和我们想象的不一样
到时候大家注意
注意到这一点
那么下面是条件判断
既然有了布尔运算
那么这些True和False从哪来的呢
最简单的就是一些条件判断
比如说等号
等号
因为它的用于赋值
变量的时候
所以说
当用于条件判断的一个等号
就是这个
等等
那么1是等于1的 2是不等
那么不等于在python里边
是一个感叹号 还有一个等号
就是说不等于正好是等于的相反
我们看到这些都是一样
稍微放慢点速度
大家可以练习一下
那么下一个模块是数据类型
python大概有三个最基本的类型
一个是整型
刚才我们看到的精度是无限的
这个整型
然后你的精度是有限的浮点型
一般来说在64位
默认是高精度
str 是字符串的意思
所有的这样的都是
字符串
我们注意到
单个的字符它也是字符串
这一点和C是不一样的
在C底下
字符一个字符
然后字符组成的数据
才是字符串
那么
这也是一个
python 字符串的抽象
这其实和刚才的无限精度的
这个整数是一个道理
它在软件上把它
进行了一个方便的实现
用于接受一个程序的
然后在这里边字符串用单引号和
双引号
是一样的
那么这样写就有一个好处就是说
如果字符串里面
我们要
输入一个单引号的字符串
我们会用双引号来把它
把它引用进来
比如说
这个代表一个单引号
然后如果要我们要双引号的话
就会用单引号来进行
这样的一个
所以这就是两套引号的好处
那么到了python3
所有的国际语言的符号
都已经内嵌到语言里边
所以说
在这个字符串
我们可以直接使用汉字
都没问题
所以说这就极大的方便了python
我们可以想象刚才的邮件里
各种奇奇怪怪的字符
然后有各种字符串
如果我们有这样的
字符串的支持的话
我们可以想象
相对于更积极的语言
比如说C语言
或者C++
它其实可以给我们非常大的建议
因为有很多细节上
或者是说大家已经约定不同的
好的处理字符串的方法
都已经被python默认
那么要入门
这个程序我们要打印一下
“Hello World！” 向前人致敬
Hello World 怎么打呢
就是pythno的一个函数
叫做print
print里可以加一个字符串
这里面双引号
我也可以用单引号
